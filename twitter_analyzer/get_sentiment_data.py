#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Author: Haotian Zhang (AlexHtZhang)

'''This is an example on using the sentiment analysis on tweets on any desired date frame. 
Get the sentiment analysis on tweets generated by get_tweets.py. Input same company_name,
 date_list as inputed in get_tweets() function in get_tweets.py. Results will be saved in 
 .cvs files in the name fasihon of 'company_sentiment_date'.

note: if you installed this package via python "setup.py install", you may need 
to import like this: 
from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer

Function(s):
  def get_sentiment_csv(company_name, date_list):
      """Get the sentiment analysis on tweets generated by get_tweets.py. Input
      same company_name, date_list as inputed in get_tweets() function in 
      get_tweets.py. Results will be saved in .cvs files in the name fasihon of 
      'company_sentiment_date'.

          :input: company_name
          :type: string
          :input: date_list
          :type: list of string(s)
          :return: None
          :type: None
      """


This program was developed and tested under following environments:
python: 2.7.14.final.0
python-bits: 64
OS: Darwin
OS-release: 16.7.0
machine: x86_64
processor: i386
byteorder: little
LC_ALL: None
LANG: en_US.UTF-8
LOCALE: None.None
'''

from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer
import codecs # support codecs.open encoding utf-8 in python2 
import pandas as pd # support csv reading


# def get_sentiment_csv(company_name, date_list):
#     """Get the sentiment analysis on tweets generated by get_tweets.py. Input
#     same company_name, date_list as inputed in get_tweets() function in 
#     get_tweets.py. Results will be saved in .cvs files in the name fasihon of 
#     'company_sentiment_date'.

#         :input: company_name
#         :type: string
#         :input: date_list
#         :type: list of string(s)
#         :return: None
#         :type: None
#     """
#     assert isinstance(company_name, str) # input company_name should be str
#     assert isinstance(date_list, list) # input date_list should be list

#     assert len(date_list) > 1 # input date_list should have length greater than one, last date is inclusive.
#     assert all(map(lambda i:isinstance(i,str), date_list)) # input date_list should be a list of str

#     fields = ['date', 'retweets', 'favorites', 'text'] # files to read
#     date_Day = date_list 
#     for date_DD in xrange(10):
#         csv_input = pd.read_csv(company_name + '_'+ 
#           date_Day[date_DD] + '.csv', skipinitialspace=True, usecols=fields)

#         analyzer = SentimentIntensityAnalyzer()
#         sentiment_neg = [] 
#         sentiment_neu = []
#         sentiment_pos = []
#         sentiment_compound = []

#         for sentence in csv_input.text:
#             sentiment_single = analyzer.polarity_scores(str(sentence))
#             sentiment_neg.append(sentiment_single['neg'])
#             sentiment_neu.append(sentiment_single['neu'])
#             sentiment_pos.append(sentiment_single['pos'])
#             sentiment_compound.append(sentiment_single['compound'])

#         csv_input['negative'] = sentiment_neg
#         csv_input['neutral'] = sentiment_neu
#         csv_input['positive'] = sentiment_pos
#         csv_input['compound'] = sentiment_compound
#         csv_input.to_csv(company_name + '_'+ 
#           date_Day[date_DD] + '.csv', index=False)

#       return 

# Example One:
def get_sentiment_unitedairlines():
    """Get the sentiment analysis on tweets on United Airlines 10000 per day, 
    from 2017-04-04 to 2017-04-14 and save as .cvs files.
        :input: None
        :type: None
        :return: None
        :type: None
    """
    fields = ['date', 'retweets', 'favorites', 'text'] # files to read
    # get any desird day as you want
    date_Day = ['04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '15'] 
    for date_DD in xrange(10):
        csv_input = pd.read_csv('United_Airlines_'+ "2017-04-" + 
          date_Day[date_DD] + '.csv', skipinitialspace=True, usecols=fields)

        analyzer = SentimentIntensityAnalyzer()
        sentiment_neg = [] 
        sentiment_neu = []
        sentiment_pos = []
        sentiment_compound = []

        for sentence in csv_input.text:
            sentiment_single = analyzer.polarity_scores(str(sentence))
            sentiment_neg.append(sentiment_single['neg'])
            sentiment_neu.append(sentiment_single['neu'])
            sentiment_pos.append(sentiment_single['pos'])
            sentiment_compound.append(sentiment_single['compound'])

        csv_input['negative'] = sentiment_neg
        csv_input['neutral'] = sentiment_neu
        csv_input['positive'] = sentiment_pos
        csv_input['compound'] = sentiment_compound
        csv_input.to_csv('United_Airlines_Sentiment_'+ "2017-04-" + 
          date_Day[date_DD] + '.csv', index=False)

# Example Two:
def get_sentiment_tesla():
    """Get the sentiment analysis on tweets on Tesla 10000 per day, 
    from 2018-01-29 to 2017-02-07 and save as .cvs files.
        :input: None
        :type: None
        :return: None
        :type: None
    """
    fields = ['date', 'retweets', 'favorites', 'text'] # files to read
    # get any desird day as you want
    date_Day = ['02-02', '02-03', '02-04', '02-05', '02-06',\
     '02-07', '02-08', '02-09', '02-10', '02-11', '02-12']
    for date_DD in xrange(10):
        csv_input = pd.read_csv('TESLA_'+ "2018-" + date_Day[date_DD] 
          + '.csv', skipinitialspace=True, usecols=fields)

        analyzer = SentimentIntensityAnalyzer()
        sentiment_neg = []
        sentiment_neu = []
        sentiment_pos = []
        sentiment_compound = []

        for sentence in csv_input.text:
            sentiment_single = analyzer.polarity_scores(str(sentence))
            sentiment_neg.append(sentiment_single['neg'])
            sentiment_neu.append(sentiment_single['neu'])
            sentiment_pos.append(sentiment_single['pos'])
            sentiment_compound.append(sentiment_single['compound'])

        csv_input['negative'] = sentiment_neg
        csv_input['neutral'] = sentiment_neu
        csv_input['positive'] = sentiment_pos
        csv_input['compound'] = sentiment_compound
        csv_input.to_csv('TESLA_Sentiment_'+ "2018-" + date_Day[date_DD] 
          + '.csv', index=False)

def get_sentiment_snap():
    """Get the sentiment analysis on tweets on Tesla 10000 per day, 
    from 2018-01-29 to 2017-02-07 and save as .cvs files.
        :input: None
        :type: None
        :return: None
        :type: None
    """
    fields = ['date', 'retweets', 'favorites', 'text'] # files to read
    # get any desird day as you want
    date_Day = ['02-17','02-18','02-19','02-20','02-21', '02-22', '02-23', \
    '02-24', '02-25', '02-26', '02-27']
    for date_DD in xrange(10):
        csv_input = pd.read_csv('SNAPCHAT_'+ "2018-" + date_Day[date_DD] 
          + '.csv', skipinitialspace=True, usecols=fields)

        analyzer = SentimentIntensityAnalyzer()
        sentiment_neg = []
        sentiment_neu = []
        sentiment_pos = []
        sentiment_compound = []

        for sentence in csv_input.text:
            sentiment_single = analyzer.polarity_scores(str(sentence))
            sentiment_neg.append(sentiment_single['neg'])
            sentiment_neu.append(sentiment_single['neu'])
            sentiment_pos.append(sentiment_single['pos'])
            sentiment_compound.append(sentiment_single['compound'])

        csv_input['negative'] = sentiment_neg
        csv_input['neutral'] = sentiment_neu
        csv_input['positive'] = sentiment_pos
        csv_input['compound'] = sentiment_compound
        csv_input.to_csv('SNAPCHAT_Sentiment_'+ "2018-" + date_Day[date_DD] 
          + '.csv', index=False)

# get_sentiment_unitedairlines() # call get_sentiment_unitedairlines
# get_sentiment_tesla() # call get_sentiment_tesla
get_sentiment_snap()

# example on usage get_sentiment_csv()
# get_sentiment_csv('example', ['2018-02-18', '2018-02-19'])

# get desired data  
# get_sentiment_csv('United_Airlines', ['2017-04-04', '2017-04-05', '2017-04-06', '2017-04-07', \
#   '2017-04-08', '2017-04-09', '2017-04-10', '2017-04-11', '2017-04-12', '2017-04-13', '2017-04-15'])
# get_sentiment_csv('SNAPCHAT', ['2018-02-17', '2018-02-18', '2018-02-19',  '2018-02-20', '2018-02-21', \
#   '2018-02-22', '2018-02-23', '2018-02-24', '2018-02-25', '2018-02-26', '2018-02-27', '2018-02-28'])
# get_sentiment_csv('TESLA', ['2018-02-02', '2018-02-03', '2018-02-04', '2018-02-05', '2018-02-06', \
#   '2018-02-07', '2018-02-08', '2018-02-09', '2018-02-10', '2018-02-11', '2018-02-12'])

